server.port=8080
spring.datasource.url=jdbc:postgresql://postgres:5432/${EMPLOYEES_POSTGRES_DB}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${EMPLOYEES_POSTGRES_USER}
spring.datasource.password=${EMPLOYEES_POSTGRES_PASSWORD}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false

spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=employee-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

eureka.client.service-url.defaultZone=${EUREKA_URL}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/master/protocol/openid-connect/certs

management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=never
management.endpoint.metrics.enabled=true
management.metrics.export.prometheus.enabled=true