server:
  port: 8080

spring:
  application:
    name: notification-service

  data:
    mongodb:
      uri: mongodb://mongo-prod:27017/notifications_db

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: notification-service-group
      auto-offset-reset: latest
      properties:
        spring.json.trusted.packages: "*"
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:https://auth.automation-company.com/realms/automation-company}
          jwk-set-uri: ${KEYCLOAK_JWK_URI:https://auth.automation-company.com/realms/automation-company/protocol/openid-connect/certs}

notification:
  websocket:
    endpoint: /ws/notifications
    allowed-origins: https://app.automation-company.com

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:}
  instance:
    prefer-ip-address: true
    hostname: ${HOSTNAME:employee-service}
    instance-id: ${spring.application.name}:${HOSTNAME:employee-service}:${server.port}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: never
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
